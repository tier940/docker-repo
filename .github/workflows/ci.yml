name: Build and Publish Docker

on:
  push:
    tags:
      - squid-v*
      - desktop-lxde-v*
      - airflow2-v*
      - litespeed-v*
      - ansible-almalinux-v*
      - ansible-rockylinux-v*
      - ansible-ubuntu-v*
      - ingress-host-lister-v*
      - tfaws-v*
      - tfgcp-v*
      - nginx-v*
      - php80-v*
      - php82-v*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      DOCKER_CONTENT_TRUST: 1
      BUILDKIT_MULTI_PLATFORM: 1
    strategy:
      matrix:
        include:
          - name: squid
            image_name: squid-lxc
            context: ./proxy/squid
            tag_prefix: squid-v
          - name: desktop-lxde
            image_name: desktop-lxde
            context: ./desktop/lxde
            tag_prefix: desktop-lxde-v
          - name: ansible-rockylinux
            image_name: ansible-rockylinux
            context: ./ansible/rockylinux
            tag_prefix: ansible-rockylinux-v
          - name: ansible-almalinux
            image_name: ansible-almalinux
            context: ./ansible/almalinux
            tag_prefix: ansible-almalinux-v
          - name: ansible-ubuntu
            image_name: ansible-ubuntu
            context: ./ansible/ubuntu
            tag_prefix: ansible-ubuntu-v
          - name: airflow2
            image_name: airflow2
            context: ./web/airflow
            tag_prefix: airflow2-v
          - name: litespeed
            image_name: litespeed
            context: ./web/litespeed
            tag_prefix: litespeed-v
          - name: ingress-host-lister
            image_name: ingress-host-lister
            context: ./k8s/ingress-host-lister
            tag_prefix: ingress-host-lister-v
          - name: tfaws
            image_name: terraform-aws
            context: ./terraform/aws
            tag_prefix: tfaws-v
          - name: tfgcp
            image_name: terraform-gcp
            context: ./terraform/gcp
            tag_prefix: tfgcp-v
          - name: nginx
            image_name: nginx
            context: ./web/nginx
            tag_prefix: nginx-v
          - name: php80
            image_name: php80
            context: ./web/php/8.0
            tag_prefix: php80-v
          - name: php82
            image_name: php82
            context: ./web/php/8.2
            tag_prefix: php82-v

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REPO_OWNER }}
          password: ${{ secrets.CR_PAT }}

      - name: Get the version
        id: get_version
        run: |
          VERSION=$(echo ${GITHUB_REF} | sed -e 's#refs/tags/##g' | awk -F'-' '{print $NF}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: "[ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.image_name }}] Push image to GitHub Container Registry"
        if: startsWith(github.ref, format('refs/tags/{0}', matrix.tag_prefix))
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ${{ matrix.context }}
          push: true
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.image_name }}:latest,ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.image_name }}:${{ env.VERSION }}

      - name: Run Dockle Security Scan
        if: contains(github.ref, format('tags/{0}', matrix.tag_prefix))
        env:
          DOCKER_CONTENT_TRUST: 0
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            goodwithtech/dockle:latest \
            --output json ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.image_name }}:latest > dockle-report-${{ matrix.name }}.json

      - name: Upload Report
        uses: actions/upload-artifact@v4
        if: contains(github.ref, format('tags/{0}', matrix.tag_prefix))
        with:
          name: Dockle Report ${{ matrix.name }}
          path: dockle-report-${{ matrix.name }}.json
